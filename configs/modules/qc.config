/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args            = Additional arguments appended to command in module.
        ext.args2           = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3           = Third set of arguments appended to command in module (multi-tool modules).
        ext.args4           = fourth set of arguments appended to command in module (multi-tool modules).
        ext.args5           = fifth set of arguments appended to command in module (multi-tool modules).
        ext.prefix          = File name prefix for output files.
        ext.suffix          = File name suffix for output files.
        ext.suffix2         = File name suffix for output2 files.
        ext.when            = Conditional clause
----------------------------------------------------------------------------------------
*/

process {
    
    withName: '.*QC:SENTIEON_QC' {
        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/QC",
            mode: 'copy',
            overwrite: true,
            pattern: '*.QC*'
        ]
        container = "${params.container_dir}/sentieon_202112.sif"
        ext.when    = params.umi
        ext.args    = { "-r ${params.genome_file}" }                                                                            // reference 
        ext.args2   = { "--interval ${params.regions_bed_qc}" }                                                                 // common arguments for driver
        ext.args3   = { "--cov_thresh 1 --cov_thresh 10 --cov_thresh 30 --cov_thresh 100 --cov_thresh 250 --cov_thresh 500" }
        ext.args4   = { "--targets_list ${params.interval_list_qc} --baits_list ${params.interval_list_qc}" }
        ext.prefix  = { "${meta.id}" }
    }

    withName: '.*QC:QC_TO_CDM' {
        container = "${params.container_dir}/SomaticPanelPipeline_2021-06-24.sif"

        publishDir = [ 
            path: "${params.crondir}/qc",
            mode: 'copy',
            overwrite: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]

        ext.when    = !params.noupload
    }

    withName: '.*QC:LOWCOV' {
        container = "${params.container_dir}/SomaticPanelPipeline_2021-06-24.sif"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/QC",
            mode: 'copy',
            overwrite: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]

        ext.args    = { "${params.regions_proteincoding}" }
        ext.args2   = { "${params.gene_regions}" }
    }

    withName: '.*QC:LOWCOV_D4' {
        container           = "${params.container_dir}/python_d4_bedtools.sif"
        containerOptions    = ' --contain '

        publishDir = [
            [ 
                path: "${params.outdir}/${params.subdir}/QC",
                mode: 'copy',
                overwrite: true,
                pattern: "*.json",
            ],
            [ 
                path: "${params.outdir}/${params.subdir}/cov",
                mode: 'copy',
                overwrite: true,
                pattern: "*.d4",
            ],
        ]

        ext.args     = { "-g ${params.mane_gtf} -d ${params.cov_probes}" }
    }

    withName: '.*QC:QC_VALUES' {
        container = "${params.container_dir}/SomaticPanelPipeline_2021-06-24.sif"
    }

    withName: '.*QC:ALLELE_CALL' {
        container = "${params.container_dir}/SomaticPanelPipeline_2021-06-24.sif"
        ext.when    = params.idsnp
        ext.args    = [
            "-Ou",
            "-R ${params.idSnp_bed}",
            "-f ${params.genome_file}",
            "-d 1000",
            "-q 10",
        ].join(' ')
        ext.args2 = { "-A -C alleles -T ${params.idSnp_bed_gz} -m  -Ov" }
        ext.args3 = [ 
                    "-a ${params.idSnp_std_bed_gz}",
                    "-c CHROM,FROM,TO,ID",
                    "-h ${params.header}", 
                    ].join(' ')
        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/QC",
            mode: 'copy',
            overwrite: true,
            saveAs: { filename -> 
                if (filename == 'versions.yml') {
                    return null 
                } else if (filename.endsWith('.genotypes.json')) {
                    return filename
                }
                return null
                }
        ]
    }

    withName: '.*QC:SNP_CHECK' {
        container = "${params.container_dir}/SomaticPanelPipeline_2021-06-24.sif"
        ext.args = { "--rs_bed ${params.idSnp_bed}" }
        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/QC",
            mode: 'copy',
            overwrite: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.when    = params.idsnp
    }

    
    withName: '.*QC:PAIRGEN_CDM' {
        container = "${params.container_dir}/SomaticPanelPipeline_2021-06-24.sif"

        publishDir = [ 
            path: "${params.crondir}/idsnp",
            mode: 'copy',
            overwrite: true,
            pattern: "*.pairgen"
        ]
        ext.when    = params.idsnp
    }

    withName: '.*QC:VERIFYBAMID' {
        container = "${params.container_dir}/verifybamid2_2.0.1.sif"

        publishDir = [ 
            path: "${params.crondir}/contamination",
            mode: 'copy',
            overwrite: true,
            pattern: "*.contaminationpy"
        ]
        ext.args    = { "--Reference ${params.genome_file}" }                            // reference 
        ext.args2   = { "--SVDPrefix ${params.verifybamidloci}" }                        // loci for exome like data
        ext.args3   = { "--DisableSanityCheck" }                                         // for smaller panels this is needed
    }

    withName: '.*QC:CONTAMINATION' {
        container = "${params.container_dir}/perl-gd.sif"

        publishDir = [
            [ 
                path: "${params.outdir}/${params.subdir}/QC/contamination",
                mode: 'copy',
                overwrite: true,
                pattern: "*.png",
            ],
            [ 
                path: "${params.outdir}/${params.subdir}/QC/contamination",
                mode: 'copy',
                overwrite: true,
                pattern: "*.txt",
            ],
            [ 
                path: "${params.crondir}/contamination",
                mode: 'copy',
                overwrite: true,
                pattern: "*.contaminationpy",
            ],
        ]

        ext.args    = { "--detect-level ${params.detect_level} --ADfield-name ${params.adfield_name} --high ${params.vaf_high} --binsize-cutoff ${params.binsize_cutoff}" }
        ext.args2   = { "--detect-level ${params.detect_level} --ADfield-name ${params.adfield_name} --high ${params.vaf_high} --binsize-cutoff ${params.binsize_cutoff} --normal" }
    }
}
