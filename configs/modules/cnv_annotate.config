/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args            = Additional arguments appended to command in module.
        ext.args2           = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3           = Third set of arguments appended to command in module (multi-tool modules).
        ext.args4           = fourth set of arguments appended to command in module (multi-tool modules).
        ext.args5           = fifth set of arguments appended to command in module (multi-tool modules).
        ext.prefix          = File name prefix for output files.
        ext.suffix          = File name suffix for output files.
        ext.suffix2         = File name suffix for output2 files.
        ext.when            = Conditional clause
----------------------------------------------------------------------------------------
*/

process {

    withName: '.*CNV_ANNOTATE:ANNOTATE_VEP' {
        container = params.vepcon

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/vcf",
            mode: 'copy',
            overwrite: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]

        ext.args    = [ 
            "--offline --merged --everything --vcf --no_stats --force_overwrite",
            "--plugin CADD ${params.CADD}",
            "--plugin LoFtool",
            "--fasta ${params.VEP_FASTA}",
            "--dir_cache ${params.VEP_CACHE}",
            "--dir_plugins ${params.VEP_CACHE}/Plugins",
            "--distance 200",
            "--custom ${params.GNOMAD},gnomADg,vcf,exact,0,AF_popmax,AF,popmax",
            "--custom ${params.COSMIC},COSMIC,vcf,exact,0,CNT",
            "--cache",
            "${params.custom_vep}",
        ].join(' ')

    }

    withName: '.*CNV_ANNOTATE:COYOTE_SEGMENTS' {
        container = "${params.container_dir}/SomaticPanelPipeline_2021-06-24.sif"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/cnv",
            mode: 'copy',
            overwrite: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args    = {"--panel ${params.panel_cna} --genes ${params.gencode_genes}"}
        ext.prefix  = {"${meta.id}"}
    }

    withName: '.*CNV_ANNOTATE:MERGE_SEGMENTS' {
        container = "${params.container_dir}/SomaticPanelPipeline_2021-06-24.sif"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/cnv",
            mode: 'copy',
            overwrite: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]

    }

    withName: '.*CNV_ANNOTATE:GENE_INTERSECT' {
        container = "${params.container_dir}/SomaticPanelPipeline_2021-06-24.sif"
        ext.args    = {"-loj"}
        ext.prefix  = {"${meta.id}"}
        ext.suffix  = {"bed"}
    }

    withName: '.*CNV_ANNOTATE:COYOTE_SEGMENTS_JSON' {
        container = "${params.container_dir}/SomaticPanelPipeline_2021-06-24.sif"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/cnv",
            mode: 'copy',
            overwrite: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args    = {"--panel ${params.panel_cna}"}
        ext.prefix  = {"${meta.id}"}
    }

    withName: '.*CNV_ANNOTATE:MERGE_JSON' {
        container = "${params.container_dir}/SomaticPanelPipeline_2021-06-24.sif"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/cnv",
            mode: 'copy',
            overwrite: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args    = {"-s '.[0] * .[1]'"}
        ext.prefix  = {"${meta.id}"}
    }

    withName: '.*CNV_ANNOTATE:SVDB_ANNOTATE_ARTEFACTS' {
        container = "${params.container_dir}/svdb_2.8.2.sif"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/svvcf/merged/",
            mode: 'copy',
            overwrite: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args    = { "--bnd_distance 25000 --overlap 0.7 --in_occ Obs --out_occ ACOUNT --in_frq Frq --out_frq AFRQ --db ${params.loqusdb_export}" }
    }

}




