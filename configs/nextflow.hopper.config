// indentation is 2 spaces


singularity{
  enabled                             = true	
  runOptions                          = '--bind /fs1/ --bind /local/ --bind /fs2/ --bind /mnt/beegfs/'
}

env{
  SENTIEON_LICENSE                    = '10.139.0.101:8990'
  bwt_max_mem                         = '50G'
}

trace {
  enabled = true
  overwrite = true
}

report {
  enabled = true
  overwrite = true
}

timeline {
  enabled = true
  overwrite = true
}

params {

  // CPU counts //
  cpu_all                             = 50
  cpu_many                            = 16
  cpu_some                            = 8

  queue                               = 'high'
  git                                 = "$baseDir/git.hash"
  container_dir                       = '/fs1/resources/containers'
  container                           = "${params.container_dir}/SomaticPanelPipeline_2021-06-24.sif"
  // results dir //
  resultsdir                          = "/fs1/results"
  dev                                 = false
  dev_suffix                          = ''
  if (params.dev) {
    dev_suffix                        = '_dev'
  }

  // DEFAULTS //
  // change in profile per assay to override //
  // PATHS //
  refpath                             = '/fs1/resources/ref/hg38/'
  outdir                              = "${params.resultsdir}${params.dev_suffix}"
  subdir                              = 'SomaticPanelPipeline'
  crondir                             = "${params.outdir}/cron/"
  gens_accessdir                      = "/access/${params.subdir}/gens"
  noupload                            = false
  coyote_cli                          = false

  // DEFAULT PROFILE NAMES SET //
  params.panel_profile_name           = null
  params.reference_profile_name       = null

  // SNV-CALLING //
  pindel                              = true
  pindel_regions_bed                  = "${params.refpath}/bed/myeloid-twist/pindel_regions.bed"
  melt                                = true
  meltheader                          = "${refpath}/annotation_dbs/MELT/melt_vcf_header"

  // PON // 
  freebayes                           = true
  PON_freebayes                       = "/fs1/resources/ref/hg38/solid/PON_freebayes39_masked.snv"
  vardict                             = true
  PON_vardict                         = "/fs1/resources/ref/hg38/solid/PON_vardict39_masked.snv"
  tnscope                             = true
  PON_tnscope                         = "/fs1/resources/ref/hg38/solid/PON_tnscope17.snv"

  // SNV filters //
  filter_field_filter                 = "FAIL_PON*,FAIL_NVAF,FAIL_LONGDEL"
  filter_freq                         = 0.05
  override_filter_terms               = "CLIN_SIG=likely_pathogenic,pathogenic" // comma separated Key,values

  // ALIGNMENT //
  sentieon_bwa                        = true
  umi                                 = true

  // FASTQ //
  sample_val                          = 50000000
  sample                              = true
  trimfq                              = true
  ffpe_pon                            = true

  // BED //
  regions_bed                         = "${refpath}/bed/twist-st/pool1_padded20bp_pool2probes.sort.bed"
  interval_list                       = "${refpath}/bed/twist-st/masked_no_alt/pool1_padded20bp_pool2probes.sort.interval_list"
  regions_bed_qc                      = "${refpath}/bed/twist-st/pool1_padded20bp.bed"
  interval_list_qc                    = "${refpath}/bed/twist-st/masked_no_alt/pool1_padded20bp.interval_list"
  regions_proteincoding               = "${refpath}/bed/twist-st/merged_probe_Gruvberger_GMS_st_v2_pool1_2_sort_coding_merge.bed"
  cov_probes                          = "${refpath}/bed/twist-st/pool1_probes.solid.bed"

  // QC //
  d4                                  = false

  // CNV CALLING //
  panel_cna                           = "${refpath}/solid/all_solid.cna"
  loqusdb_export                      = false

  // MANTA //
  manta                               = true
  bedgz                               = "${refpath}/bed/twist-st/pool1_padded20bp.bed.gz"
  
  // CNVkit //
  cnvkit                              = true 
  cnvkit_reference                    = "${refpath}/solid/cnvkit/masked/solidv3_39normals_masked.cnn"
  
  // if split = true, defined the other split references
  cnvkit_split                        = true
  cnvkit_reference_exons              = "${refpath}/solid/cnvkit/masked/solidv3_39normals_exons_masked.cnn"
  cnvkit_reference_backbone           = "${refpath}/solid/cnvkit/masked/solidv3_39normals_backbone_masked.cnn"

  // GATK //
  gatk_cnv                            = true

  // GATK PROSTPROCESS //
  theano_flags                        = '/fs1/resources/theano'

  // intervalls for gatk panel of normals, used for somatic calling. Float CN
  gatk_intervals_full                 = "${refpath}/solid/gatk/masked/solid_v3_maskedhg38.preprocessed.blacklisted.interval_list"
  GATK_pon                            = "${params.refpath}/solid/gatk/masked/20230622_female_cnvpon.hdf5"

  // intervalls and models for constitutional GATK calling
  gatk_intervals                      = "${refpath}/solid/gatk/masked/solid_v3_maskedhg38.preprocessed.blacklisted.gcfiltered.noalt.interval_list"
  ploidymodel                         = "${refpath}/solid/gatk/masked/ploidy_model"
  gatkreffolders                      = "${refpath}/solid/gatk/masked/gatk_ref"

  // SENTIEON // PLACEHOLDER
  tnscope_model                       = "/fs1/resources/ref/hg19/Sentieon_GiAB_HighAF_LowFP_201711.05.model"

  // ANNOTATION //
  vcfanno                             = "${refpath}/annotation_dbs/ovarian/vcfanno/vcfanno_onco"
  custom_vep                          = ""
  mane_gtf                            = "${refpath}/annotation_dbs/mane.111.gtf"

  // Pharmacogenomics //
  params.pgx_csv                      = false
  params.pgx_csv_dir                  = "${params.crondir}/pgx/${params.subdir}/csv"
  params.pgx_assay                    = 'gmssolidpgx'

  // PIPELINE PARAMS //
  coyote_group                        = "SPP"
  assay                               = "SPP"
  cdm                                 = "SPP"

  // DNA FUSIONS //
  dna_fusions                         = true
  genefuse_reference                  = "${params.refpath}/solid/drugable_targets_hg38_genefuse2.csv"
  mantafusions                        = "/fs1/viktor/dna_fusions/genefuse_manta.sort.bed.gz"

  // OTHER BIOMARKERS //
  other_biomarkers                    = true

  // if true //
  msi                                 = true
  hrd                                 = true

  // CREATION OF REFS //
  padding                             = 0

  // IDSNP
  idsnp                               = true
  idSnp_bed                           = "${params.refpath}/idSnp/44_rsids_100nt_flanks.bed"
  idSnp_bed_gz                        = "${params.refpath}/idSnp/44_rsids.vs.dbsnp_146.hg38.tsv.gz"
  idSnp_std_bed_gz                    = "${params.refpath}/idSnp/44_sorted_rsids_standard.bed.gz"
  header                              = "${params.refpath}/idSnp/header"    

  // CONTAMINATION
  detect_level                        = 0.01
  adfield_name                        = 'VD'
  vaf_high                            = 0.3 
  binsize_cutoff                      = 80 
}

profiles {
  
  // This is now the default hg38 genome build, NO ALT contigs. MASKED false pseudogenes
  hg38 {
    params.reference_profile_name     = 'hg38'
    params.refpath                    = '/fs1/resources/ref/hg38/'

    // FASTA //
    params.genome_file                = "${params.refpath}/fasta/masked/GCA_000001405.15_GRCh38_no_alt_analysis_set_nochr_masked.fna"
    params.GENOMEDICT                 = "${params.refpath}/fasta/masked/GCA_000001405.15_GRCh38_no_alt_analysis_set_nochr_masked.dict"
    params.split_ref                  = "${params.refpath}/fasta/split/"

    // VEP REFERENCES AND ANNOTATION DBS //
    params.vepcon                     = "${params.container_dir}/ensembl-vep_release_103.sif"
    params.CADD                       = "${params.refpath}/annotation_dbs/whole_genome_SNVs.tsv.gz"
    params.VEP_FASTA                  = "${params.refpath}/vep/.vep/homo_sapiens_merged/98_GRCh38/Homo_sapiens.GRCh38.dna.toplevel.fa.gz"
    params.MAXENTSCAN                 = "${params.refpath}/vep/.vep/Plugins/MaxEntScan_scripts"
    params.VEP_CACHE                  = "${params.refpath}/vep/.vep103"
    params.GNOMAD                     = "${params.refpath}/annotation_dbs/gnomad_3.1/gnomad.genomes.v3.1.sites.mini.vcf.gz"
    params.COSMIC                     = "${params.refpath}/annotation_dbs/CosmicCodingMuts_v92.vcf.gz"
    params.gene_regions               = "${params.refpath}/gtf/gencode.v33.exons.sort.merge.bed"
    params.gencode_genes              = "${params.refpath}/gtf/gencode.v33.annotation.genes.proteincoding.bed"
    params.GATK_GNOMAD                = "${params.refpath}/gatk_cnv/gnomad_5pct.intervals"
    params.refflat                    = "${params.refpath}/annotation_dbs/refFlat_nochr.txt"
    params.blacklist                  = "/fs1/viktor/gatk_ref/patched_hg38/resources/hg38-blacklist.v2.nochr.bed"
    params.priors                     = "/fs1/viktor/gatk_ref/patched_hg38/resources/priors"
    params.gene_gtf                   = "${params.refpath}/gtf/gencode.v33.annotation.genes.proteincoding.bed"
    params.verifybamidloci            = "${params.refpath}/VerifyBamID/resource/exome/no_chr/1000g.phase3.10k.b38.exome.vcf.gz.dat"
  }

  // This is identical to the hg38 profile, except that it uses a modified version of the reference fasta
  // which masks an incorrectly added region in hg38 which makes all reads in U2AF1 multi-mapped.
  // https://www.biorxiv.org/content/10.1101/2021.05.07.442430v1
  hg38_u2af1 {
    params.reference_profile_name     = 'hg38_u2af1'
    params.refpath                    = '/fs1/resources/ref/hg38/'

    // FASTA //
    params.genome_file                = "${params.refpath}/fasta/GRCh38.u2af1_fix.v1.2020_04_01.nochr.fa"
    params.GENOMEDICT                 = "${params.refpath}/fasta/GRCh38.u2af1_fix.v1.2020_04_01.nochr.dict"
    params.split_ref                  = "${params.refpath}/fasta/split/"

    // VEP REFERENCES AND ANNOTATION DBS //
    params.vepcon                     = "${params.container_dir}/ensembl-vep_release_103.sif"
    params.CADD                       = "${params.refpath}/annotation_dbs/whole_genome_SNVs.tsv.gz"
    params.VEP_FASTA                  = "${params.refpath}/vep/.vep/homo_sapiens_merged/98_GRCh38/Homo_sapiens.GRCh38.dna.toplevel.fa.gz"
    params.MAXENTSCAN                 = "${params.refpath}/vep/.vep/Plugins/MaxEntScan_scripts"
    params.VEP_CACHE                  = "${params.refpath}/vep/.vep103"
    params.GNOMAD                     = "${params.refpath}/annotation_dbs/gnomad_3.1/gnomad.genomes.v3.1.sites.mini.vcf.gz"
    params.COSMIC                     = "${params.refpath}/annotation_dbs/CosmicCodingMuts_v92.vcf.gz"
    params.gene_regions               = "${params.refpath}/gtf/gencode.v33.exons.sort.merge.bed"
    params.gencode_genes              = "${params.refpath}/gtf/gencode.v33.annotation.genes.proteincoding.bed"
    params.GATK_GNOMAD                = "${params.refpath}/gatk_cnv/gnomad_5pct.intervals"
    params.refflat                    = "${params.refpath}/annotation_dbs/refFlat_nochr.txt"
    params.blacklist                  = "/fs1/viktor/gatk_ref/patched_hg38/resources/hg38-blacklist.v2.nochr.bed"
    params.priors                     = "/fs1/viktor/gatk_ref/patched_hg38/resources/priors"
    params.gene_gtf                   = "${params.refpath}/gtf/gencode.v33.annotation.genes.proteincoding.bed"
    params.verifybamidloci            = "${params.refpath}/VerifyBamID/resource/exome/no_chr/1000g.phase3.10k.b38.exome.vcf.gz.dat"
  }

  myeloid {
    params.panel_profile_name         = 'myeloid'
    // PATHS //
    params.outdir                     = "${params.resultsdir}${params.dev_suffix}"
    params.subdir                     = 'myeloid38'
    params.crondir                    = "${params.outdir}/cron/"
    params.gens_accessdir             = "/access/${params.subdir}/gens"

    // SNV-CALLING //
    params.pindel_regions_bed         = "${params.refpath}/bed/myeloid-twist/pindel_regions.bed"
    params.melt                       = false

    // PON // 
    params.PON_freebayes              = "${params.refpath}/twist_myeloid/PON_freebayes_20210330_hg38"
    params.PON_vardict                = "${params.refpath}/twist_myeloid/PON_vardict_20210330_hg38"
    params.PON_tnscope                = "${params.refpath}/twist_myeloid/PON_tnscope_20210330_hg38"

    // ALIGNMENT //
    // FASTQ //
    params.sample_val                 = 25000000
    params.sample                     = false
    params.trimfq                     = false
    params.ffpe_pon                   = false

    // BED //
    params.regions_bed                = "${params.refpath}/bed/myeloid-twist/all_targets_padded.bed"
    params.interval_list              = "${params.refpath}/bed/myeloid-twist/all_targets_padded.interval_list"
    params.regions_bed_qc             = params.regions_bed
    params.interval_list_qc           = params.interval_list
    params.regions_proteincoding      = "${params.refpath}/bed/myeloid-twist/all_targets_onlycoding.bed"
    params.cov_probes                 = params.regions_bed

    // QC //
    params.d4                         = false

    // SNV CALLING //
    params.vardict_var_freq_cutoff_p  = '0.01'
    params.vardict_var_freq_cutoff_up = '0.01'
    params.fb_var_freq_cutoff_p       = '0.03'
    params.fb_var_freq_cutoff_up      = '0.03'
    params.tnscope_var_freq_cutoff_p  = '0.0005'
    params.tnscope_var_freq_cutoff_up = '0.0005'
    params.markgermline               = "${baseDir}/resources/myeloid_mg.json"

    // CNV CALLING //
    params.panel_cna                  = "/fs1/resources/ref/hg38/solid/all_solid.cna"

    // MANTA //
    params.manta                      = false

    // CNVkit //
    params.cnvkit                     = true
    params.cnvkit_split               = false
    params.cnvkit_reference           = "${params.refpath}/cnvkit/myeloid_reference_20210408.cnn"

    // GATK //
    params.gatk_cnv                   = false

    // ANNOTATION //
    params.vcfanno                    = false

    // PIPELINE PARAMS //
    params.coyote_group               = "myeloid_GMSv1"
    params.assay                      = "myeloid"
    params.cdm                        = "GMSmyeloid"

    // DNA FUSIONS //
    params.dna_fusions                = false

    // OTHER BIOMARKERS //
    params.other_biomarkers           = false

    // CREATION OF REFS //
    params.padding                    = 250

    // IDSNP
    params.idsnp                      = true
    params.idSnp_bed                  = "${params.refpath}/idSnp/myeloid_111_rsids_100nt_flanks.bed"
    params.idSnp_bed_gz               = "${params.refpath}/idSnp/myeloid_111_rsids.vs.dbsnp_146.hg38.tsv.gz"
    params.idSnp_std_bed_gz           = "${params.refpath}/idSnp/myeloid_111_rsid_standard.bed.gz"
    params.header                     = "${params.refpath}/idSnp/header"
  }
  
  PARP_inhib {
    params.panel_profile_name         = 'PARP_inhib'
    // PATHS //
    params.outdir                     = "${params.resultsdir}${params.dev_suffix}"
    params.subdir                     = 'PARP_inhib'
    params.crondir                    = "${params.outdir}/cron/"
    params.gens_accessdir             = "/access/${params.subdir}/gens"

    // SNV-CALLING //

    params.tnscope                    = false
    params.pindel                     = false
    params.meltheader                 = "${params.refpath}/annotation_dbs/MELT/melt_vcf_header"
    
    // PON // 
    params.PON_freebayes              = "${params.refpath}/PARP_inhibv2-0/PON_freebayes_100_masked.snv"
    params.PON_vardict                = "${params.refpath}/PARP_inhibv2-0/PON_vardict_100_masked.snv"
    params.tnscope                    = false
    params.PON_tnscope                = false

    // ALIGNMENT //
    // FASTQ //
    params.sample                     = false
    params.sample_val                 = 75000000
    params.sample                     = true
    params.trimfq                     = false
    params.ffpe_pon                   = false

    // BED //
    params.regions_bed                = "${params.refpath}/bed/twist-brca/oncov2-0.bed"
    params.interval_list              = "${params.refpath}/bed/twist-brca/oncov2-0.interval_list"
    params.regions_bed_qc             = params.regions_bed
    params.interval_list_qc           = params.interval_list
    params.regions_proteincoding      = "${params.refpath}/bed/twist-brca/all_targets_onlycoding.bed"
    params.cov_probes                 = params.regions_bed

    // QC //
    params.d4                         = true
    
    // SNV CALLING //
    params.vardict_var_freq_cutoff_p  = '0.01'
    params.vardict_var_freq_cutoff_up = '0.01'
    params.fb_var_freq_cutoff_p       = '0.03'
    params.fb_var_freq_cutoff_up      = '0.03'
    params.tnscope_var_freq_cutoff_p  = '0.0005'
    params.tnscope_var_freq_cutoff_up = '0.0005'
    params.markgermline               = "${baseDir}/resources/PARP_mg.json"

    // CNV CALLING //
    params.panel_cna                  = "/fs1/resources/ref/hg38/PARP_inhibv2-0/all_PARP.cna"

    // MANTA //
    params.bedgz                      = "${params.refpath}/bed/twist-brca/oncov2-0.bed.gz"

    // CNVkit //
    params.cnvkit_reference           = "${params.refpath}/PARP_inhibv2-0/PARPinhibv2-0_100normals_masked.cnn"
    params.cnvkit_split               = false

    // GATK //
    // intervalls for gatk panel of normals, used for somatic calling. Float CN
    params.gatk_intervals_full        = "${params.refpath}/PARP_inhibv2-0/PARPinhib_v2_maskedhg38.preprocessed.blacklisted.interval_list"
    params.GATK_pon                   = "${params.refpath}/PARP_inhibv2-0/100_mixed_gatk_maskedhg38_cnvpon.hdf5"

    // intervalls and models for constitutional GATK calling
    params.gatk_intervals             = "${params.refpath}/PARP_inhibv2-0/PARPinhib_v2_maskedhg38.preprocessed.blacklisted.gcfiltered.noalt.interval_list"
    params.ploidymodel                = "${params.refpath}/PARP_inhibv2-0/ploidy-model/"
    params.gatkreffolders             = "${params.refpath}/PARP_inhibv2-0/gatk_ref"

    // ANNOTATION //
    params.vcfanno                      = "${params.refpath}/annotation_dbs/ovarian/vcfanno/vcfanno_onco"

    // PIPELINE PARAMS //
    params.coyote_group               = "PARP_inhib"
    params.assay                      = "PARP_inhib"
    params.cdm                        = "PARPinhib"

    // DNA FUSIONS //
    params.dna_fusions                = false

    // OTHER BIOMARKERS //
    params.other_biomarkers           = false

    // CREATION OF REFS //
    params.padding                    = 250

    // IDSNP
    params.idsnp                      = true
    params.idSnp_bed                  = "${params.refpath}/idSnp/44_rsids_100nt_flanks.bed"
    params.idSnp_bed_gz               = "${params.refpath}/idSnp/44_rsids.vs.dbsnp_146.hg38.tsv.gz"
    params.idSnp_std_bed_gz           = "${params.refpath}/idSnp/44_sorted_rsids_standard.bed.gz"
    params.header                     = "${params.refpath}/idSnp/header"   
  }

  solid {
    params.panel_profile_name         = 'solid'
    // PATHS //
    params.outdir                     = "${params.resultsdir}${params.dev_suffix}"
    params.subdir                     = 'solid_hg38' // making it more compatible with the live version
    params.crondir                    = "${params.outdir}/cron/"
    params.gens_accessdir             = "/access/${params.subdir}/gens"

    // SNV-CALLING //
    params.pindel                     = false
    params.melt                       = false
    params.meltheader                 = "${params.refpath}/annotation_dbs/MELT/melt_vcf_header"

    // PON // 
    params.PON_freebayes              = "/fs1/resources/ref/hg38/solid/PoN_solid_freebayes_73_241004.snv"
    params.PON_vardict                = "/fs1/resources/ref/hg38/solid/PoN_solid_vardict_73_241004.snv"
    params.tnscope                    = false

    // FASTQ //
    params.sample_val                 = 75000000
    params.sample                     = true
    params.trimfq                     = false
    params.ffpe_pon                   = true

    // BED //
    params.regions_bed                = "${params.refpath}/bed/twist-st/pool1_padded20bp_pool2probes.sort.bed"
    params.regions_bed_exons          = "${params.refpath}/bed/twist-st/pool1_padded20bp.bed"
    params.regions_bed_backbone       = "${params.refpath}/bed/twist-st/pool2_hg38_probes.bed"
    params.interval_list              = "${params.refpath}/bed/twist-st/masked_no_alt/pool1_padded20bp_pool2probes.sort.interval_list"
    params.regions_bed_qc             = "${params.refpath}/bed/twist-st/pool1_padded20bp.bed"
    params.interval_list_qc           = "${params.refpath}/bed/twist-st/masked_no_alt/pool1_padded20bp.interval_list"
    params.regions_proteincoding      = "${params.refpath}/bed/twist-st/merged_probe_Gruvberger_GMS_st_v2_pool1_2_sort_coding_merge.bed"
    params.cov_probes                 = "${params.refpath}/bed/twist-st/pool1_probes.solid.bed"

    // QC //
    params.d4                         = true

    // SNV CALLING //
    params.vardict_var_freq_cutoff_p  = '0.01'
    params.vardict_var_freq_cutoff_up = '0.01'
    params.fb_var_freq_cutoff_p       = '0.03'
    params.fb_var_freq_cutoff_up      = '0.03'
    params.tnscope_var_freq_cutoff_p  = '0.0005'
    params.tnscope_var_freq_cutoff_up = '0.0005'
    params.markgermline               = "${baseDir}/resources/solid_mg.json"

    // CNV CALLING //
    params.panel_cna                  = "${params.refpath}/solid/all_solid.cna"
    params.loqusdb_export             = "${params.refpath}/solid/loqusdb_export_solid_curated.vcf"

    // MANTA //
    params.bedgz                      = "${params.refpath}/bed/twist-st/pool1_padded20bp.bed.gz"

    // CNVkit //
    params.cnvkit_reference           = "${params.refpath}/solid/cnvkit/masked/solidv3_39normals_masked.cnn"

    // if split = true, define the other split references
    params.cnvkit_reference_exons     = "${params.refpath}/solid/cnvkit/masked/solidv3_39normals_exons_masked.cnn"
    params.cnvkit_reference_backbone  = "${params.refpath}/solid/cnvkit/masked/solidv3_39normals_backbone_masked.cnn"

    // GATK //
    // intervalls for gatk panel of normals, used for somatic calling. Float CN
    params.gatk_intervals_full        = "${params.refpath}/solid/gatk/masked/solid_v3_maskedhg38.preprocessed.blacklisted.interval_list"
    params.GATK_pon                   = "${params.refpath}/solid/gatk/masked/20230622_female_cnvpon.hdf5"

    // intervalls and models for constitutional GATK calling
    params.gatk_intervals             = "${params.refpath}/solid/gatk/masked/solid_v3_maskedhg38.preprocessed.blacklisted.gcfiltered.noalt.interval_list"
    params.ploidymodel                = "${params.refpath}/solid/gatk/masked/ploidy_model"
    params.gatkreffolders             = "${params.refpath}/solid/gatk/masked/gatk_ref"

    // ANNOTATION //
    params.vcfanno                    = "${params.refpath}/annotation_dbs/solid/vcfanno/vcfanno_solid"
    params.mmhotspot                  = "--custom ${params.refpath}/annotation_dbs/solid/MM.hotspots.hotspot.hg38.vcf.gz,mmhotspot,vcf,exact,0,OID"
    params.luhotspot                  = "--custom ${params.refpath}/annotation_dbs/solid/LU.hotspots.hotspot.hg38.vcf.gz,luhotspot,vcf,exact,0,OID"
    params.gihotspot                  = "--custom ${params.refpath}/annotation_dbs/solid/GI.hotspots.hotspot.hg38.vcf.gz,gihotspot,vcf,exact,0,OID"
    params.cohotspot                  = "--custom ${params.refpath}/annotation_dbs/solid/CO.hotspots.hotspot.hg38.vcf.gz,cohotspot,vcf,exact,0,OID"
    params.dhotspot                   = "--custom ${params.refpath}/annotation_dbs/solid/D.hotspots.hotspot.hg38.vcf.gz,dhotspot,vcf,exact,0,OID"
    params.cnshotspot                 = "--custom ${params.refpath}/annotation_dbs/solid/CNS.hotspots.hotspot.hg38.vcf.gz,cnshotspot,vcf,exact,0,OID"
    params.custom_vep                 = "${params.mmhotspot} ${params.luhotspot} ${params.gihotspot} ${params.cohotspot}  ${params.dhotspot} ${params.cnshotspot}"

    // Pharmacogenomics //
    params.pgx_csv                    = true
    params.pgx_csv_dir                = "${params.crondir}/pgx/${params.subdir}/csv"
    params.pgx_assay                  = 'gmssolidpgx'

    // PIPELINE PARAMS //
    params.coyote_group               = "solid_GMSv3"
    params.assay                      = "solid"
    params.cdm                        = "GMSsolid"

    // DNA FUSIONS //
    params.dna_fusions                = true
    params.genefuse_reference         = "${params.refpath}/solid/drugable_targets_hg38_genefuse2.csv"
    params.mantafusions               = "/fs1/viktor/dna_fusions/genefuse_manta.sort.bed.gz"

    // OTHER BIOMARKERS //
    params.other_biomarkers           = true
    params.msi                        = true
    params.hrd                        = true
    params.msi_baseline               = "/fs1/resources/validation-samples/solid/msisensorbaseline/msisensor_reference_hg38.list"
    params.msi_pro_baseline           = "/fs1/resources/validation-samples/solid/msisensorbaseline/msisensor_reference_hg38.list_baseline"

    // CREATION OF REFS //
    params.padding                    = 250

    // IDSNP
    params.idsnp                      = true
    params.idSnp_bed                  = "${params.refpath}/idSnp/44_rsids_100nt_flanks.bed"
    params.idSnp_bed_gz               = "${params.refpath}/idSnp/44_rsids.vs.dbsnp_146.hg38.tsv.gz"
    params.idSnp_std_bed_gz           = "${params.refpath}/idSnp/44_sorted_rsids_standard.bed.gz"
    params.header                     = "${params.refpath}/idSnp/header"   
  }

  lymphoid {
    params.panel_profile_name         = 'lymphoid'
    // PATHS    
    params.outdir                     = "${params.resultsdir}${params.dev_suffix}"
    params.subdir                     = 'lymph_hg38'
    params.crondir                    = "${params.outdir}/cron/"
    params.gens_accessdir             = "/access/${params.subdir}/gens"

    // SNV-CALLING //
    params.pindel                     = false
    params.melt                       = false

    // PON // 
    params.PON_freebayes              = "/fs1/resources/ref/hg38/solid/PON_freebayes39_masked.snv"
    params.PON_vardict                = "/fs1/resources/ref/hg38/solid/PON_vardict39_masked.snv"
    params.tnscope                    = false

    // FASTQ //
    params.sample_val                 = 50000000
    params.sample                     = false
    params.trimfq                     = false
    params.ffpe_pon                   = false

    // BED //
    params.regions_bed                = "${params.refpath}/bed/lymphoid-twist/v3/lymph_v3_mergedprobes_simple.bed"
    params.interval_list              = "${params.refpath}/bed/lymphoid-twist/v3/lymph_v3_mergedprobes_simple_masked.interval_list"
    params.regions_bed_qc             = "${params.refpath}/bed/lymphoid-twist/v3/lymph_v3_mergedprobes_simple.bed"
    params.interval_list_qc           = "${params.refpath}/bed/lymphoid-twist/v3/lymph_v3_mergedprobes_simple_masked.interval_list"
    params.regions_proteincoding      = "${params.refpath}/bed/lymphoid-twist/v3/lymph_v3_mergedprobes_simple_coding.bed"
    params.cov_probes                 = params.regions_bed

    // QC //
    params.d4                         = false
    
    // SNV CALLING //
    params.vardict_var_freq_cutoff_p  = '0.01'
    params.vardict_var_freq_cutoff_up = '0.01'
    params.fb_var_freq_cutoff_p       = '0.03'
    params.fb_var_freq_cutoff_up      = '0.03'
    params.tnscope_var_freq_cutoff_p  = '0.0005'
    params.tnscope_var_freq_cutoff_up = '0.0005'
    params.markgermline               = "${baseDir}/resources/lymph_mg.json"

    // CNV CALLING //
    params.panel_cna                  = "/fs1/resources/ref/hg38/solid/all_solid.cna"

    // MANTA //
    params.bedgz                      = "${params.refpath}/bed/lymphoid-twist/v3/lymph_v3_mergedprobes_simple.bed.gz"

    // CNVkit //
    params.cnvkit_reference           = "/fs1/resources/validation-samples/lymphoid/PoN/cnvkit/lymphv3_8normals.cnn"
    params.cnvkit_split               = false

    // GATK //
    // intervalls for gatk panel of normals, used for somatic calling. Float CN
    params.gatk_intervals_full        = "/fs1/resources/validation-samples/lymphoid/PoN/gatk/lymphv3_gatk-gcmod.interval_list"
    params.GATK_pon                   = "/fs1/resources/validation-samples/lymphoid/PoN/gatk_tumor/20230309_mixed_cnvpon.hdf5"

    // intervalls and models for constitutional GATK calling
    params.gatk_intervals             = "/fs1/resources/validation-samples/lymphoid/PoN/gatk/lymphv3_gatk-gcmod.interval_list"
    params.ploidymodel                = "/fs1/resources/validation-samples/lymphoid/PoN/gatk/ploidy-model"
    params.gatkreffolders             = "/fs1/resources/validation-samples/lymphoid/PoN/gatk/gatk_ref"

    // ANNOTATION //
    params.vcfanno                    = false

    // PIPELINE PARAMS //
    params.coyote_group               = "lymph_GMSv3"
    params.assay                      = "lymphoid"
    params.cdm                        = "GMSlymphoid"

    // DNA FUSIONS //
    params.dna_fusions                = false

    // OTHER BIOMARKERS //
    params.other_biomarkers           = false

    // CREATION OF REFS //
    params.padding                    = 250
    
    // IDSNP
    params.idsnp                      = true
    params.idSnp_bed                  = "${params.refpath}/idSnp/lymphoid_41_rsids_100nt_flanks.bed"
    params.idSnp_bed_gz               = "${params.refpath}/idSnp/lymphoid_41_rsids.vs.dbsnp_146.hg38.tsv.gz"
    params.idSnp_std_bed_gz           = "${params.refpath}/idSnp/lymphoid_41_rsid_standard.bed.gz"
    params.header                     = "${params.refpath}/idSnp/header"
  }

  GMSHem {
    params.panel_profile_name         = 'gmshem'
    // PATHS //
    params.outdir                     = "${params.resultsdir}${params.dev_suffix}"
    params.subdir                     = 'gmshem'
    params.crondir                    = "${params.outdir}/cron/"
    params.gens_accessdir             = "/access/${params.subdir}/gens"

    // SNV-CALLING //
    params.pindel_regions_bed         = "${params.refpath}/bed/myeloid-twist/pindel_regions.bed"
    params.melt                       = false
    params.pindel                     = false

    // PON // 
    params.PON_freebayes              = "${params.refpath}/twist_myeloid/PON_freebayes_20210330_hg38"
    params.PON_vardict                = "${params.refpath}/twist_myeloid/PON_vardict_20210330_hg38"
    params.PON_tnscope                = "${params.refpath}/twist_myeloid/PON_tnscope_20210330_hg38"

    // ALIGNMENT //
    // FASTQ //
    params.sample_val                 = 50000000
    params.sample                     = true
    params.trimfq                     = false
    params.ffpe_pon                   = false

    // BED //
    params.regions_bed                = "${params.refpath}/bed/GMSHem/HemGenePanelV1-1_TE-92467229_RUNX1-introns_0p04X_TE-97551470_hg38_nochr_padded20bp.bed"
    params.interval_list              = "${params.refpath}/bed/GMSHem/HemGenePanelV1-1_TE-92467229_RUNX1-introns_0p04X_TE-97551470_hg38_nochr_padded20bp.interval_list"
    params.regions_bed_qc             = params.regions_bed
    params.interval_list_qc           = params.interval_list
    params.regions_proteincoding      = "${params.refpath}/bed/myeloid-twist/all_targets_onlycoding.bed"  

    // SNV CALLING //
    params.vardict_var_freq_cutoff_p  = '0.01'
    params.vardict_var_freq_cutoff_up = '0.01'
    params.fb_var_freq_cutoff_p       = '0.03'
    params.fb_var_freq_cutoff_up      = '0.03'
    params.tnscope_var_freq_cutoff_p  = '0.0005'
    params.tnscope_var_freq_cutoff_up = '0.0005'
    params.markgermline               = "${baseDir}/resources/myeloid_mg.json"

    // CNV CALLING //
    params.panel_cna                  = "/fs1/resources/ref/hg38/solid/all_solid.cna"

    // MANTA //
    params.manta                      = false
    //params.manta                    = "${params.refpath}/bed/GMSHem/HemGenePanelV1-1_TE-92467229_RUNX1-introns_0p04X_TE-97551470_hg38_nochr_padded20bp.bed.gz"

    // CNVkit //
    params.cnvkit                     = true
    params.cnvkit_split               = false
    params.cnvkit_reference           = "/fs1/viktor/pipelines_src/SomaticPanelPipeline/results_dev/gmshem/references/GMSHem_cnvkit_full.cnn"

    // GATK //
    // intervalls for gatk panel of normals, used for somatic calling. Float CN
    params.gatk_intervals_full        = "/fs1/viktor/pipelines_src/SomaticPanelPipeline/results_dev/gmshem/references/gatk/GMSHem.preprocessed.blacklisted.interval_list"
    params.GATK_pon                   = "/fs1/viktor/pipelines_src/SomaticPanelPipeline/results_dev/gmshem/references/gatk/GMSHem.somatic_gatk_pon.hdf5"

    // intervalls and models for constitutional GATK calling
    params.gatk_intervals             = "/fs1/viktor/pipelines_src/SomaticPanelPipeline/results_dev/gmshem/references/gatk/GMSHem.preprocessed.blacklisted.gcfiltered.noalt.interval_list"
    params.ploidymodel                = "/fs1/viktor/pipelines_src/SomaticPanelPipeline/results_dev/gmshem/references/gatk/GMSHem_ploidy-model/"
    params.gatkreffolders             = "/fs1/viktor/pipelines_src/SomaticPanelPipeline/results_dev/gmshem/references/gatk_ref"

    // ANNOTATION //
    params.vcfanno                    = false

    // PIPELINE PARAMS //
    params.coyote_group               = "GMSHem"
    params.assay                      = "GMSHem"
    params.cdm                        = "GMSHem"

    // DNA FUSIONS //
    params.dna_fusions                = false

    // OTHER BIOMARKERS //
    params.other_biomarkers           = false

    // CREATION OF REFS //
    params.padding                    = 250

    // IDSNP
    params.idsnp                      = true
    params.idSnp_bed                  = "${params.refpath}/idSnp/44_rsids_100nt_flanks.bed"
    params.idSnp_bed_gz               = "${params.refpath}/idSnp/44_rsids.vs.dbsnp_146.hg38.tsv.gz"
    params.idSnp_std_bed_gz           = "${params.refpath}/idSnp/44_sorted_rsids_standard.bed.gz"
    params.header                     = "${params.refpath}/idSnp/header"   
  }
}

manifest {
    name            = 'SomaticPanelPipeline'
    author          = 'CMD Lund'
    homePage        = 'https://github.com/Clinical-Genomics-Lund/SomaticPanelPipeline'
    description     = 'call and annoate variants from WGS/WES of cancer patients'
    mainScript      = 'main.nf'
    nextflowVersion = '!>=21.10.3'
    version         = '1.0.0'
}

// Include necessary configs
includeConfig 'configs/modules/base.config'
includeConfig 'configs/nextflow.process.config'

// Module specifc configs
includeConfig 'configs/modules/align_sentieon.config'
includeConfig 'configs/modules/add_to_db.config'
includeConfig 'configs/modules/bed_intervals.config'
includeConfig 'configs/modules/biomarkers.config'
includeConfig 'configs/modules/call_cohort.config'
includeConfig 'configs/modules/cnv_annotate.config'
includeConfig 'configs/modules/cnv_calling.config'
includeConfig 'configs/modules/create_meta.config'
includeConfig 'configs/modules/create_snvpon.config'
includeConfig 'configs/modules/cnvkit_refs.config'
includeConfig 'configs/modules/fusions.config'
includeConfig 'configs/modules/qc.config'
includeConfig 'configs/modules/sample.config'
includeConfig 'configs/modules/snv_calling.config'
includeConfig 'configs/modules/snv_annotate.config'
includeConfig 'configs/modules/fusions.config'
includeConfig 'configs/modules/software_versions.config'
includeConfig 'configs/modules/pharmacogenomics.config'
includeConfig 'configs/modules/idsnp.config'
process {
  executor                            = 'slurm'
  queue                               = params.queue
  time                                = 48.h
  container                           = params.container
}

trace {
    overwrite = true
}